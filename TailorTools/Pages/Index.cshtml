@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}


<div class="container">
    Paste your meta data here:
    <textarea id="txtScript" rows="2" onchange="parseScript()"></textarea>
</div>
<div class="container">
    <div class="row">
        <div class="col-lg-6">
            <h1>DTO</h1>
            <div id="classMeta"></div>
        </div>
        <div class="col-lg-6">
            <h1>Insert</h1>
            <div id="selectInsert"></div>
        </div>
    </div>
</div>
    @section Scripts
        {
        <script>
            function parseScript() {
                var txtScript = document.getElementById('txtScript');
                var xmlhttp = new XMLHttpRequest();
                var url = "/?handler=Class";
                var param = "script=" + encodeURI(txtScript.value);

                xmlhttp.open("POST", url, true);
                xmlhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                xmlhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        var classMeta = JSON.parse(this.responseText);
                        handeClassMetaData(classMeta);
                    }
                };
                xmlhttp.send(param);
            }

            function handeClassMetaData(classMeta) {
                var div = document.getElementById('classMeta');
                var selectInsert = document.getElementById('selectInsert');

                div.innerHTML = templateCreateClass(classMeta);
                selectInsert.innerHTML = templateSelectInsert(classMeta);
            }

            function templateCreateClass(classMeta) {
                var s = [],
                    lf = '<br>',
                    tab = '&nbsp;&nbsp;&nbsp;&nbsp;';
                s.push('public class ' + classMeta.name);
                s.push(lf);
                s.push('{' + lf)
                for (var i = 0; i < classMeta.properties.length; i++) {
                    s.push(tab + 'public ');
                    s.push(classMeta.properties[i].type + ' ');
                    s.push(classMeta.properties[i].name);
                    s.push(' { get; set; }' + lf)
                }
                s.push('}' + lf)
                return s.join('');
            }

            function templateSelectInsert(classMeta) {
                var s = [],
                    lf = '<br>',
                    toSelectString = function (p) {
                        switch (p.type) {
                            case "string":
                                return "''' + " + p.name + " + '''";
                            case "DateTime":
                                return "''' + CONVERT(varchar, " + p.name + ", 127) + '''";
                            default:
                                return "' + CONVERT(varchar, " + p.name + ") + '";
                        }
                    };
                s.push("SELECT 'INSERT INTO " + classMeta.name + " (");
                for (var i = 0; i < classMeta.properties.length; i++) {
                    s.push(classMeta.properties[i].name);
                    if (i + 1 < classMeta.properties.length)
                        s.push(', ');
                }
                s.push(")'" + lf + "+ ' VALUES (");
                for (var i = 0; i < classMeta.properties.length; i++) {
                    s.push(toSelectString(classMeta.properties[i]));
                    if (i + 1 < classMeta.properties.length)
                        s.push(', ');
                }
                s.push(")'" + lf + "FROM " + classMeta.name);

                return s.join('');
            }


        </script>
    }
